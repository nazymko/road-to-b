/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.road_to_b.dao.tables.UserContact;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "user_contact", schema = "road_to_b_dev")
public class UserContactRecord extends UpdatableRecordImpl<UserContactRecord> implements Record5<Integer, Integer, String, String, Boolean> {

	private static final long serialVersionUID = -1712801107;

	/**
	 * Setter for <code>road_to_b_dev.user_contact.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.user_contact.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>road_to_b_dev.user_contact.user_id</code>.
	 */
	public void setUserId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.user_contact.user_id</code>.
	 */
	@Column(name = "user_id", nullable = false, precision = 10)
	@NotNull
	public Integer getUserId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>road_to_b_dev.user_contact.prop</code>.
	 */
	public void setProp(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.user_contact.prop</code>.
	 */
	@Column(name = "prop", nullable = false, length = 128)
	@NotNull
	@Size(max = 128)
	public String getProp() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>road_to_b_dev.user_contact.value</code>.
	 */
	public void setValue(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.user_contact.value</code>.
	 */
	@Column(name = "value", nullable = false, length = 1024)
	@NotNull
	@Size(max = 1024)
	public String getValue() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>road_to_b_dev.user_contact.is_disabled</code>.
	 */
	public void setIsDisabled(Boolean value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.user_contact.is_disabled</code>.
	 */
	@Column(name = "is_disabled")
	public Boolean getIsDisabled() {
		return (Boolean) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, Boolean> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, Integer, String, String, Boolean> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return UserContact.USER_CONTACT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return UserContact.USER_CONTACT.USER_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return UserContact.USER_CONTACT.PROP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return UserContact.USER_CONTACT.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field5() {
		return UserContact.USER_CONTACT.IS_DISABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getUserId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getProp();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value5() {
		return getIsDisabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord value2(Integer value) {
		setUserId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord value3(String value) {
		setProp(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord value4(String value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord value5(Boolean value) {
		setIsDisabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserContactRecord values(Integer value1, Integer value2, String value3, String value4, Boolean value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserContactRecord
	 */
	public UserContactRecord() {
		super(UserContact.USER_CONTACT);
	}

	/**
	 * Create a detached, initialised UserContactRecord
	 */
	public UserContactRecord(Integer id, Integer userId, String prop, String value, Boolean isDisabled) {
		super(UserContact.USER_CONTACT);

		setValue(0, id);
		setValue(1, userId);
		setValue(2, prop);
		setValue(3, value);
		setValue(4, isDisabled);
	}
}
