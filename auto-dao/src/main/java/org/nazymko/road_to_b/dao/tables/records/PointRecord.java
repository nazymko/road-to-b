/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.road_to_b.dao.tables.Point;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "point", schema = "road_to_b_dev")
public class PointRecord extends UpdatableRecordImpl<PointRecord> implements Record4<Long, String, Double, Double> {

	private static final long serialVersionUID = 453153424;

	/**
	 * Setter for <code>road_to_b_dev.point.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.point.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 19)
	@NotNull
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>road_to_b_dev.point.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.point.name</code>.
	 */
	@Column(name = "name", nullable = false)
	@NotNull
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>road_to_b_dev.point.longitude</code>.
	 */
	public void setLongitude(Double value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.point.longitude</code>.
	 */
	@Column(name = "longitude", nullable = false, precision = 12)
	@NotNull
	public Double getLongitude() {
		return (Double) getValue(2);
	}

	/**
	 * Setter for <code>road_to_b_dev.point.latitude</code>.
	 */
	public void setLatitude(Double value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.point.latitude</code>.
	 */
	@Column(name = "latitude", nullable = false, precision = 12)
	@NotNull
	public Double getLatitude() {
		return (Double) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, Double, Double> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Long, String, Double, Double> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Point.POINT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Point.POINT.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field3() {
		return Point.POINT.LONGITUDE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Double> field4() {
		return Point.POINT.LATITUDE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value3() {
		return getLongitude();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Double value4() {
		return getLatitude();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PointRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PointRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PointRecord value3(Double value) {
		setLongitude(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PointRecord value4(Double value) {
		setLatitude(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PointRecord values(Long value1, String value2, Double value3, Double value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PointRecord
	 */
	public PointRecord() {
		super(Point.POINT);
	}

	/**
	 * Create a detached, initialised PointRecord
	 */
	public PointRecord(Long id, String name, Double longitude, Double latitude) {
		super(Point.POINT);

		setValue(0, id);
		setValue(1, name);
		setValue(2, longitude);
		setValue(3, latitude);
	}
}
