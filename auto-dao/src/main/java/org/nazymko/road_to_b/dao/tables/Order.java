/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.road_to_b.dao.Keys;
import org.nazymko.road_to_b.dao.RoadToBDev;
import org.nazymko.road_to_b.dao.tables.records.OrderRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Order extends TableImpl<OrderRecord> {

	private static final long serialVersionUID = -1876756984;

	/**
	 * The reference instance of <code>road_to_b_dev.order</code>
	 */
	public static final Order ORDER = new Order();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<OrderRecord> getRecordType() {
		return OrderRecord.class;
	}

	/**
	 * The column <code>road_to_b_dev.order.id</code>.
	 */
	public final TableField<OrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.order.sit_id</code>.
	 */
	public final TableField<OrderRecord, Integer> SIT_ID = createField("sit_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.order.trip_id</code>.
	 */
	public final TableField<OrderRecord, Integer> TRIP_ID = createField("trip_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.order.user_id</code>.
	 */
	public final TableField<OrderRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.order.is_disabled</code>.
	 */
	public final TableField<OrderRecord, Boolean> IS_DISABLED = createField("is_disabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * Create a <code>road_to_b_dev.order</code> table reference
	 */
	public Order() {
		this("order", null);
	}

	/**
	 * Create an aliased <code>road_to_b_dev.order</code> table reference
	 */
	public Order(String alias) {
		this(alias, ORDER);
	}

	private Order(String alias, Table<OrderRecord> aliased) {
		this(alias, aliased, null);
	}

	private Order(String alias, Table<OrderRecord> aliased, Field<?>[] parameters) {
		super(alias, RoadToBDev.ROAD_TO_B_DEV, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<OrderRecord> getPrimaryKey() {
		return Keys.KEY_ORDER_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<OrderRecord>> getKeys() {
		return Arrays.<UniqueKey<OrderRecord>>asList(Keys.KEY_ORDER_PRIMARY, Keys.KEY_ORDER_UNIQUE_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<OrderRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<OrderRecord, ?>>asList(Keys.ORDER_IBFK_1, Keys.ORDER_IBFK_2, Keys.ORDER_IBFK_3);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Order as(String alias) {
		return new Order(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Order rename(String name) {
		return new Order(name, null);
	}
}
