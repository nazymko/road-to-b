/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.nazymko.road_to_b.dao.tables.Driver;
import org.nazymko.road_to_b.dao.tables.DriverProps;
import org.nazymko.road_to_b.dao.tables.Point;
import org.nazymko.road_to_b.dao.tables.Sits;
import org.nazymko.road_to_b.dao.tables.Transport;
import org.nazymko.road_to_b.dao.tables.TransportProps;
import org.nazymko.road_to_b.dao.tables.Trip;
import org.nazymko.road_to_b.dao.tables.records.DriverPropsRecord;
import org.nazymko.road_to_b.dao.tables.records.DriverRecord;
import org.nazymko.road_to_b.dao.tables.records.PointRecord;
import org.nazymko.road_to_b.dao.tables.records.SitsRecord;
import org.nazymko.road_to_b.dao.tables.records.TransportPropsRecord;
import org.nazymko.road_to_b.dao.tables.records.TransportRecord;
import org.nazymko.road_to_b.dao.tables.records.TripRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>road_to_b_dev</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<DriverRecord, Integer> IDENTITY_DRIVER = Identities0.IDENTITY_DRIVER;
	public static final Identity<DriverPropsRecord, Integer> IDENTITY_DRIVER_PROPS = Identities0.IDENTITY_DRIVER_PROPS;
	public static final Identity<PointRecord, Long> IDENTITY_POINT = Identities0.IDENTITY_POINT;
	public static final Identity<SitsRecord, Integer> IDENTITY_SITS = Identities0.IDENTITY_SITS;
	public static final Identity<TransportPropsRecord, Integer> IDENTITY_TRANSPORT_PROPS = Identities0.IDENTITY_TRANSPORT_PROPS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<DriverRecord> KEY_DRIVER_PRIMARY = UniqueKeys0.KEY_DRIVER_PRIMARY;
	public static final UniqueKey<DriverPropsRecord> KEY_DRIVER_PROPS_PRIMARY = UniqueKeys0.KEY_DRIVER_PROPS_PRIMARY;
	public static final UniqueKey<PointRecord> KEY_POINT_PRIMARY = UniqueKeys0.KEY_POINT_PRIMARY;
	public static final UniqueKey<SitsRecord> KEY_SITS_PRIMARY = UniqueKeys0.KEY_SITS_PRIMARY;
	public static final UniqueKey<TransportRecord> KEY_TRANSPORT_PRIMARY = UniqueKeys0.KEY_TRANSPORT_PRIMARY;
	public static final UniqueKey<TransportPropsRecord> KEY_TRANSPORT_PROPS_PRIMARY = UniqueKeys0.KEY_TRANSPORT_PROPS_PRIMARY;
	public static final UniqueKey<TripRecord> KEY_TRIP_PRIMARY = UniqueKeys0.KEY_TRIP_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<DriverRecord, Integer> IDENTITY_DRIVER = createIdentity(Driver.DRIVER, Driver.DRIVER.ID);
		public static Identity<DriverPropsRecord, Integer> IDENTITY_DRIVER_PROPS = createIdentity(DriverProps.DRIVER_PROPS, DriverProps.DRIVER_PROPS.ID);
		public static Identity<PointRecord, Long> IDENTITY_POINT = createIdentity(Point.POINT, Point.POINT.ID);
		public static Identity<SitsRecord, Integer> IDENTITY_SITS = createIdentity(Sits.SITS, Sits.SITS.ID);
		public static Identity<TransportPropsRecord, Integer> IDENTITY_TRANSPORT_PROPS = createIdentity(TransportProps.TRANSPORT_PROPS, TransportProps.TRANSPORT_PROPS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<DriverRecord> KEY_DRIVER_PRIMARY = createUniqueKey(Driver.DRIVER, Driver.DRIVER.ID);
		public static final UniqueKey<DriverPropsRecord> KEY_DRIVER_PROPS_PRIMARY = createUniqueKey(DriverProps.DRIVER_PROPS, DriverProps.DRIVER_PROPS.ID);
		public static final UniqueKey<PointRecord> KEY_POINT_PRIMARY = createUniqueKey(Point.POINT, Point.POINT.ID);
		public static final UniqueKey<SitsRecord> KEY_SITS_PRIMARY = createUniqueKey(Sits.SITS, Sits.SITS.ID);
		public static final UniqueKey<TransportRecord> KEY_TRANSPORT_PRIMARY = createUniqueKey(Transport.TRANSPORT, Transport.TRANSPORT.ID);
		public static final UniqueKey<TransportPropsRecord> KEY_TRANSPORT_PROPS_PRIMARY = createUniqueKey(TransportProps.TRANSPORT_PROPS, TransportProps.TRANSPORT_PROPS.ID);
		public static final UniqueKey<TripRecord> KEY_TRIP_PRIMARY = createUniqueKey(Trip.TRIP, Trip.TRIP.ID);
	}
}
