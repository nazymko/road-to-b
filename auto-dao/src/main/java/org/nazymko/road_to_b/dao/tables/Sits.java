/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.nazymko.road_to_b.dao.Keys;
import org.nazymko.road_to_b.dao.RoadToBDev;
import org.nazymko.road_to_b.dao.tables.records.SitsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sits extends TableImpl<SitsRecord> {

	private static final long serialVersionUID = 2100376545;

	/**
	 * The reference instance of <code>road_to_b_dev.sits</code>
	 */
	public static final Sits SITS = new Sits();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SitsRecord> getRecordType() {
		return SitsRecord.class;
	}

	/**
	 * The column <code>road_to_b_dev.sits.id</code>.
	 */
	public final TableField<SitsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.sits.transport_id</code>.
	 */
	public final TableField<SitsRecord, Integer> TRANSPORT_ID = createField("transport_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.sits.trip_id</code>.
	 */
	public final TableField<SitsRecord, Integer> TRIP_ID = createField("trip_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.sits.place_number</code>.
	 */
	public final TableField<SitsRecord, Short> PLACE_NUMBER = createField("place_number", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

	/**
	 * The column <code>road_to_b_dev.sits.is_disabled</code>.
	 */
	public final TableField<SitsRecord, Boolean> IS_DISABLED = createField("is_disabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * Create a <code>road_to_b_dev.sits</code> table reference
	 */
	public Sits() {
		this("sits", null);
	}

	/**
	 * Create an aliased <code>road_to_b_dev.sits</code> table reference
	 */
	public Sits(String alias) {
		this(alias, SITS);
	}

	private Sits(String alias, Table<SitsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Sits(String alias, Table<SitsRecord> aliased, Field<?>[] parameters) {
		super(alias, RoadToBDev.ROAD_TO_B_DEV, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SitsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SITS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SitsRecord> getPrimaryKey() {
		return Keys.KEY_SITS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SitsRecord>> getKeys() {
		return Arrays.<UniqueKey<SitsRecord>>asList(Keys.KEY_SITS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SitsRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SitsRecord, ?>>asList(Keys.SITS_IBFK_1, Keys.SITS_IBFK_2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Sits as(String alias) {
		return new Sits(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Sits rename(String name) {
		return new Sits(name, null);
	}
}
