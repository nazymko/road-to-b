/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.road_to_b.dao.tables.Sits;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "sits", schema = "road_to_b_dev")
public class SitsRecord extends UpdatableRecordImpl<SitsRecord> implements Record4<Integer, Integer, Integer, Short> {

	private static final long serialVersionUID = -64700845;

	/**
	 * Setter for <code>road_to_b_dev.sits.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.sits.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>road_to_b_dev.sits.transport_id</code>.
	 */
	public void setTransportId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.sits.transport_id</code>.
	 */
	@Column(name = "transport_id", nullable = false, precision = 10)
	@NotNull
	public Integer getTransportId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>road_to_b_dev.sits.trip_id</code>.
	 */
	public void setTripId(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.sits.trip_id</code>.
	 */
	@Column(name = "trip_id", nullable = false, precision = 10)
	@NotNull
	public Integer getTripId() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>road_to_b_dev.sits.place_number</code>.
	 */
	public void setPlaceNumber(Short value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.sits.place_number</code>.
	 */
	@Column(name = "place_number", nullable = false, precision = 5)
	@NotNull
	public Short getPlaceNumber() {
		return (Short) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Short> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Integer, Integer, Short> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Sits.SITS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Sits.SITS.TRANSPORT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Sits.SITS.TRIP_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Short> field4() {
		return Sits.SITS.PLACE_NUMBER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTransportId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getTripId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Short value4() {
		return getPlaceNumber();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SitsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SitsRecord value2(Integer value) {
		setTransportId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SitsRecord value3(Integer value) {
		setTripId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SitsRecord value4(Short value) {
		setPlaceNumber(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public SitsRecord values(Integer value1, Integer value2, Integer value3, Short value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached SitsRecord
	 */
	public SitsRecord() {
		super(Sits.SITS);
	}

	/**
	 * Create a detached, initialised SitsRecord
	 */
	public SitsRecord(Integer id, Integer transportId, Integer tripId, Short placeNumber) {
		super(Sits.SITS);

		setValue(0, id);
		setValue(1, transportId);
		setValue(2, tripId);
		setValue(3, placeNumber);
	}
}
