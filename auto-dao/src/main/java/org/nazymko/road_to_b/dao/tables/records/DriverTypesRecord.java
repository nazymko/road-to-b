/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables.records;


import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;
import org.nazymko.road_to_b.dao.tables.DriverTypes;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "driver_types", schema = "road_to_b_dev")
public class DriverTypesRecord extends UpdatableRecordImpl<DriverTypesRecord> implements Record4<Integer, String, String, Boolean> {

	private static final long serialVersionUID = -2139655446;

	/**
	 * Setter for <code>road_to_b_dev.driver_types.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.driver_types.id</code>.
	 */
	@Id
	@Column(name = "id", unique = true, nullable = false, precision = 10)
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>road_to_b_dev.driver_types.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.driver_types.description</code>.
	 */
	@Column(name = "description", nullable = false, length = 1024)
	@NotNull
	@Size(max = 1024)
	public String getDescription() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>road_to_b_dev.driver_types.name</code>.
	 */
	public void setName(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.driver_types.name</code>.
	 */
	@Column(name = "name", nullable = false, length = 1024)
	@NotNull
	@Size(max = 1024)
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>road_to_b_dev.driver_types.is_disabled</code>.
	 */
	public void setIsDisabled(Boolean value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>road_to_b_dev.driver_types.is_disabled</code>.
	 */
	@Column(name = "is_disabled", nullable = false)
	@NotNull
	public Boolean getIsDisabled() {
		return (Boolean) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Boolean> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Boolean> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return DriverTypes.DRIVER_TYPES.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return DriverTypes.DRIVER_TYPES.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return DriverTypes.DRIVER_TYPES.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field4() {
		return DriverTypes.DRIVER_TYPES.IS_DISABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value4() {
		return getIsDisabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DriverTypesRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DriverTypesRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DriverTypesRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DriverTypesRecord value4(Boolean value) {
		setIsDisabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DriverTypesRecord values(Integer value1, String value2, String value3, Boolean value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DriverTypesRecord
	 */
	public DriverTypesRecord() {
		super(DriverTypes.DRIVER_TYPES);
	}

	/**
	 * Create a detached, initialised DriverTypesRecord
	 */
	public DriverTypesRecord(Integer id, String description, String name, Boolean isDisabled) {
		super(DriverTypes.DRIVER_TYPES);

		setValue(0, id);
		setValue(1, description);
		setValue(2, name);
		setValue(3, isDisabled);
	}
}
