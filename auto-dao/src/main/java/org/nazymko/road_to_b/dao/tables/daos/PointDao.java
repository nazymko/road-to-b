/**
 * This class is generated by jOOQ
 */
package org.nazymko.road_to_b.dao.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.nazymko.road_to_b.dao.tables.Point;
import org.nazymko.road_to_b.dao.tables.records.PointRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PointDao extends DAOImpl<PointRecord, org.nazymko.road_to_b.dao.tables.pojos.Point, Long> {

	/**
	 * Create a new PointDao without any configuration
	 */
	public PointDao() {
		super(Point.POINT, org.nazymko.road_to_b.dao.tables.pojos.Point.class);
	}

	/**
	 * Create a new PointDao with an attached configuration
	 */
	public PointDao(Configuration configuration) {
		super(Point.POINT, org.nazymko.road_to_b.dao.tables.pojos.Point.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Long getId(org.nazymko.road_to_b.dao.tables.pojos.Point object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<org.nazymko.road_to_b.dao.tables.pojos.Point> fetchById(Long... values) {
		return fetch(Point.POINT.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public org.nazymko.road_to_b.dao.tables.pojos.Point fetchOneById(Long value) {
		return fetchOne(Point.POINT.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<org.nazymko.road_to_b.dao.tables.pojos.Point> fetchByName(String... values) {
		return fetch(Point.POINT.NAME, values);
	}

	/**
	 * Fetch records that have <code>longitude IN (values)</code>
	 */
	public List<org.nazymko.road_to_b.dao.tables.pojos.Point> fetchByLongitude(Double... values) {
		return fetch(Point.POINT.LONGITUDE, values);
	}

	/**
	 * Fetch records that have <code>latitude IN (values)</code>
	 */
	public List<org.nazymko.road_to_b.dao.tables.pojos.Point> fetchByLatitude(Double... values) {
		return fetch(Point.POINT.LATITUDE, values);
	}
}
